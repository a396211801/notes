<?php

class Controller_Total extends \Base
{

    private $total = array(
        'gameDataClick' => array('name' => '游戏ID每个用户抽奖'),
        'gamePersonalClick' => array('name' => '个人点击次数'),
        'gameTopRightClick' => array('name' => '游戏页面右上角'),
        'gameEndUpperClick' => array('name' => '抽奖结束点击上面广告链接'),
        'gameEndLowerClick' => array('name' => '抽奖结束点击下面广告链接'),
        'gamePrizeClick' => array('name' => '游戏页面下面的奖品列表点击'),
        'gameCloseClick' => array('name' => '抽完奖后关闭'),
        'gameRedRemoveClick' => array('name' => '红包拆'),
        'gameRedCollarClick' => array('name' => '红包领'),
        'gameRedShutClick' => array('name' => '红包关'),
        'gamePrizeDetailsClick' => array('name' => '奖品列表详情点击'),

    );

    private $keys = array(
        '1' => '游戏',
        '2' => '结束上',
        '3' => '结束下',
        '4' => '右上角',
        '5' => '下列表',
        '6' => '奖品详情',
        '7' => '马上使用',
        '8' => '抽完奖后关闭',
        '9' => '点击中奖链接',
        '10' => '详情点击领取',
        // 1游戏点击  2结束游戏广告上　３游戏结束广告下 4 右上角点击 5 获奖点击进去 7　中奖后点击跳转　　
        //6详情点击进去 ８点击关闭 11 点开红包 12 点开后的领取 13是关闭
    );

    private $redis;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->redis = new Component\Redis();
    }

    public function indexAction()
    {
        $this->display();
    }

    public function getDataAction()
    {
        $parameter = $this->_request->getPost();
        if (isset($parameter['average']) && $parameter['average']) {
            $data = $this->average();
            exit(json_encode(array('code' => 0, 'data' => $data)));
        }
        $date = isset($parameter['date']) && $parameter['date'] ? $parameter['date'] : date("Y-m-d");
        $data = $this->getReportDataAction($date);

        $json = array('code' => 0, 'desc' => '成功', 'data' => $data);

        exit(json_encode($json));
    }

    public function InsertDBAction()
    {

        $date = date("Y-m-d", strtotime("-1 day"));

        $key = "InserDB_" . $date;
        $data = json_encode($this->data($date));

        $this->redis->set($key, $data);

    }

    public function getReportDataAction($_date)
    {

        $key = "InserDB_" . $_date;

        $data = $this->redis->get($key);

        if ($data) {
            return json_decode($data, true);
        }

        $data = $this->data($_date);
        return $data;
    }

    //总数的平均值
    public function average()
    {

        $key = "InserDB_*";
        $list = $this->redis->keys($key);
        $data = [];
        if ($list) {
            foreach ($list as $item) {
                $data[] = json_decode($this->redis->get($item), true);
            }
        }
        $average = [];
        if ($data) {
            foreach ($data as $t) {
                foreach ($t as $l) {
                    if ($l['name'] == '用户游戏点击平均值(总点击数/总用户数)') {
                        foreach ($l as $k => $item) {
                            if ($k != 'name') {
                                if (!$item) {
                                    if (!isset($average[$k])) {
                                        $average[$k]['click'] = 0;
                                        $average[$k]['user'] = 0;
                                    }
                                } else {
                                    $total = explode('(', $item);
                                    $click = explode('/', $total[1]);
                                    $user = explode(')', $click[1]);
                                    if (isset($average[$k])) {
                                        $average[$k]['click'] = $average[$k]['click'] + $click[0];
                                        $average[$k]['user'] = $average[$k]['user'] + $user[0];
                                    } else {
                                        $average[$k]['click'] = $click[0];
                                        $average[$k]['user'] = $user[0];
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        $data = [];
        if ($average) {
            foreach ($average as $e => $p) {
                if ($p['user'] != 0) {
                    $data[$e] = round($p['click'] / $p['user'], 2) . "({$p['click']}/{$p['user']})";
                } else {
                    $data[$e] = "0(0/0)";
                }
            }
        } else {
            $data['a'] = "0(0/0)";
            $data['b'] = "0(0/0)";
            $data['c'] = "0(0/0)";
            $data['d'] = "0(0/0)";
            $data['e'] = "0(0/0)";
            $data['f'] = "0(0/0)";
            $data['g'] = "0(0/0)";
            $data['h'] = "0(0/0)";
        }
        $data['name'] = '用户游戏点击平均值(总点击数/总用户数)';
        $return[] = $data;
        return $return;
    }

    private function data($_date)
    {
        //此类要对应 $option
        $type = array(
            1 => 'gameClick',
            2 => 'gameEndUpperClick',
            3 => 'gameEndLowerClick',
            4 => 'gameTopRightClick',
            5 => 'gamePrizeClick',
            6 => 'gamePrizeClick',
            7 => 'gameCloseClick',
            8 => 'gamePrizeDetailsClick',
            11 => 'gameRedRemoveClick',
            12=> 'gameRedCollarClick',
            13 => 'gameRedShutClick',

        );

        $gameId = array(
            'a' => '2244',
            'b' => '2324',
            'c' => '2390',
            'd' => '2419',
            'e' => '2421',
            'f' => '2426',
            'g' => '2427',
            'h' => '3151',
            't' => '4000',
            'l' => '4002'
        );

        $pattern = $_date . '_*';
        $it = NULL;
        $count = 100;

        $list = $this->redis->getScan($it, $pattern, $count);

        $data = new \Data();

        $details = $data->details();
        $detailsUsed = $data->detailsUsed();
        //点击数统计
        if ($list) {
            foreach ($list as $item) {
                $val = explode('_', $item);
                $id = $val[1];
                switch (count($val)) {
                    // 奖品中奖次数
                    case 2:
                        $number = $this->redis->get($item);
                        $this->total['number'][$id] = $number;
                        break;
                    // 2017-08-21_2244_5 key为3个_合并
                    case 3:
                        $option = $val[2];
                        //游戏ID个人抽奖次数
                        $number = $this->redis->get($item);
                        $filed = 'gameDataClick';
                        if (isset($details[$id])) {
                            if (!isset($this->total[$id])) {
                                $this->total[$id] = array('name' => $id);
                            }
                            $filed = $id;
                        }
                        if ($option == 6) {
                            $filed = 'gamePrizeDetailsClick';
                        }
                        $this->getDatas($filed, $number, $id, $option);
                        break;
                    // 2017-08-27_2244_94726053631_1 为4个_合并
                    case 4:
                        $option = $val[3];
                        if ($option < 10 && is_numeric($option)) {
                            //每个游戏个人抽奖统计
                            if ($option == 1) {
                                $user = $val[2];
                                $number = $this->redis->get($item);
                                $this->getDatas('gamePersonalClick', $number, $user, $id);
                            }
                            $number = $this->redis->get($item);
                            $this->getDatas($type[$option], $number, $id, $option);
                        } else {
                            if($option==11 || $option==12 || $option==13){
                                switch ($option){
                                    case 11;
                                        $filed = 'gameRedRemoveClick';
                                        break;
                                    case 12;
                                        $filed = 'gameRedCollarClick';
                                        break;
                                    case 13;
                                        $filed = 'gameRedShutClick';
                                        break;
                                }
                                $user = $val[2];
                                $number = $this->redis->get($item);
                                $this->getDatas($filed, $number, $user, $id);
                            }else{
                                $filed = 'gameUnknownClick';
                                if (isset($this->total[$filed])) {
                                    $this->total[$filed]++;
                                } else {
                                    $this->total[$filed] = 0;
                                }
                            }
                        }
                        break;
                    //2017-08-22_id_random_order_option
                    case 5:
                        $option = $val[4];
                        $filed = $val[3];
                        $number = $this->redis->get($item);
                        if (!isset($this->total[$filed])) {
                            $this->total[$filed] = array('name' => $filed);
                        }
                        $this->getDatas($filed, $number, $filed, $option);
                        break;
                    default :
                        $filed = 'gameUnknownClick';
                        if (isset($this->total[$filed])) {
                            $this->total[$filed]++;
                        } else {
                            $this->total[$filed] = 0;
                        }
                        break;
                }
            }
        }
        unset($list);

        $data = [];
        $total = [];
        $key = 0;
        $totalClick = 0;
//        print_R($this->total);
        foreach ($this->total as $k => $value) {
            $data[$key]['name'] = isset($value['name']) ? $value['name'] : '';
            if ($k == 'gamePrizeDetailsClick' || !$data[$key]['name'] || is_numeric($data[$key]['name'])) {
                if (isset($details[$data[$key]['name']]) || isset($detailsUsed[$data[$key]['name']])) {
                    $option = $data[$key]['name'];
                    $title = isset($details[$data[$key]['name']])?$details[$option]['title']:$detailsUsed[$option]['title'];
                    $orderId = isset($details[$data[$key]['name']])?$details[$option]['orderId']:$detailsUsed[$option]['orderId'];
                    foreach ($value[$option] as $y => $v) {
                        $data[$key]['name'] = $title;
                        $data[$key]['o'] = isset($value[$option][$y]) ? $value[$option][$y] : 0;
                        $data[$key]['orderId'] = $orderId;
                        $data[$key]['type'] = $y;
                        $totalClick = $totalClick + $data[$key]['o'];
                        $key++;
                    }
                } else {
                    if ($data[$key]['name']) {
                        $number = 0;
                        if (is_array($value)) {
                            foreach ($value as $v) {
                                if (is_array($v)) {
                                    foreach ($v as $item) {
                                        $number = $number + $item;
                                    }
                                }
                            }
                        }
                        $data[$key]['o'] = $number;
                    } else {
                        if ($k == "number") $total = $value;
                        //过滤不在次数据
                        unset($data[$key]);
                    }
                }
            } else {

                if ($k == 'gamePersonalClick') {
                    //用户游戏点击平均值
                    $number = [];
                    $userList = [];
                    foreach ($value as $t => $item) {
                        if (is_array($item)) {
                            $userList[] = $t;
                        }
                    }
                    //平均值计算
                    $data[$key]['name'] = '用户游戏点击平均值(总点击数/总用户数)';
                    foreach ($value as $t => $item) {
                        if (is_array($item)) {
                            foreach ($item as $l => $i) {
                                if (isset($number[$l]['userNumber'])) {
                                    $number[$l]['userNumber']++;
                                } else {
                                    $number[$l]['userNumber'] = 1;
                                }
                                if (isset($number[$l]['number'])) {
                                    $number[$l]['number'] = $i + $number[$l]['number'];
                                } else {
                                    $number[$l]['number'] = $i;
                                }
                            }
                        }
                    }
                    foreach ($gameId as $t => $item) {
                        $data[$key][$t] = $this->getAverage($number, $item);
                    }
                    $key++;
                } elseif($k=='gameRedRemoveClick' || $k=='gameRedShutClick' || $k=='gameRedCollarClick') {
                    $gameRedRemoveClick = $this->dataHandle($value,$gameId,$key);
                    foreach ($gameId as $t => $item) {
                        $data[$key][$t] = $this->getTotal($gameRedRemoveClick, $item);
                    }
                    $key++;
                }else{
                    foreach ($gameId as $t => $item) {
                        $data[$key][$t] = $this->getTotal($value, $item);
                    }
                }
            }
            $key++;
        }
        $amount = 0;
        if($data){
            foreach ($data as $p => $item) {
                if (isset($item['orderId'])) {
                    $totalNumber = isset($total[$item['orderId']]) ? $total[$item['orderId']] : 0;
                    $data[$p]["number"] = $totalNumber;
                    $amount = $amount + $totalNumber;
                    unset($total[$item['orderId']]);
                }
            }
        }
        if ($total) {
            foreach ($total as $k => $item) {
                if(isset($details[$k])){
                    $data[] = array(
                        'name' => $details[$k]['title'],
                        'o' => 0,
                        'orderId' => $details[$k]['orderId'],
                        'number' => $item,
                    );
                    $amount = $amount + $item;
                }
            }
        }

        $data[] = array(
            'name' => "中奖总数",
            'o' => $amount,
        );

        $data[] = array(
            'name' => "点击总数和",
            'o' => $totalClick,
        );
        return $data;
    }

    //数据保存
    private function getDatas($file, $number, $id, $option)
    {
        if (isset($this->total[$file][$id][$option])) {
            $this->total[$file][$id][$option] = $number + $this->total[$file][$id][$option];
        } else {
            $this->total[$file][$id][$option] = $number;
        }
    }

    public function dataHandle($value)
    {
        $Remove = [];
        $number = [];
        foreach ($value as $t => $item) {
            if (is_array($item)) {
                $Remove[] = $t;
            }
        }
        foreach ($value as $t => $item) {
            if (is_array($item)) {
                foreach ($item as $l => $i) {
                    if (isset($number[$l]['userNumber'])) {
                        $number[$l]['userNumber']++;
                    } else {
                        $number[$l]['userNumber'] = 1;
                    }
                }
            }
        }
        return $number;
    }

    //数据获取
    public function getTotal($array, $data)
    {
        $number = 0;
        if (isset($array[$data])) {
            foreach ($array[$data] as $item) {
                $number = $number + $item;
            }
        }
        return $number;
    }

    //数据获取
    public function getDate($array, $data, $date)
    {
        $number = 0;

        if (isset($array[$date][$data])) {
            $number = $array[$date][$data];
        }
        return $number;
    }

    //平均值
    public function getAverage($data, $gameId)
    {
        $average = 0;
        if (isset($data[$gameId])) {
            $average = round($data[$gameId]['number'] / $data[$gameId]['userNumber'], 2) . "({$data[$gameId]['number']}/{$data[$gameId]['userNumber']})";
        }
        return $average;
    }
}